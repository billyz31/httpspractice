version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3100:3001"  # 修改为3100端口避免冲突
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=http://localhost:5173
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # 端口映射由Coolify的Traefik反向代理处理
    # ports:
    #   - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  # 反向代理（用于本地HTTPS测试，可选）
  # 在Coolify环境中不需要nginx-proxy，由Traefik处理反向代理
  # nginx-proxy:
  #   image: nginx:alpine
  #   ports:
  #     - "8080:80"
  #     - "8443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/ssl/certs:ro
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - app-network
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  ssl-certs:
    driver: local